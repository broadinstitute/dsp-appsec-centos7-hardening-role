---
- name: "NOTSCORED | 6.1.1 | PATCH | Audit system file permissions"
  command: /bin/true
  changed_when: false
  when:
      - centos7cis_rule_6_1_1
  tags:
      - level2
      - patch
      - rule_6.1.1
      - notscored

- name: "SCORED | 6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
    dest: /etc/passwd
    owner: root
    group: root
    mode: 644
  when:
      - centos7cis_rule_6_1_2
  tags:
      - level1
      - patch
      - rule_6.1.2
      - scored

- name: "SCORED | 6.1.3 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
    dest: /etc/shadow
    owner: root
    group: root
    mode: o-rwx,g-wx
  when:
      - centos7cis_rule_6_1_3
  tags:
      - level1
      - patch
      - rule_6.1.3
      - scored

- name: "SCORED | 6.1.4 | PATCH | Ensure permissions on /etc/group are configured"
  file:
    dest:  /etc/group
    owner: root
    group: root
    mode: 644
  when:
      - centos7cis_rule_6_1_4
  tags:
      - level1
      - patch
      - rule_6.1.4
      - scored

- name: "SCORED | 6.1.5 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
    dest: /etc/gshadow
    owner: root
    group: root
    mode: o-rwx,g-wx
  when:
      - centos7cis_rule_6_1_5
  tags:
      - level1
      - patch
      - rule_6.1.5
      - scored

- name: "SCORED | 6.1.6 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
    dest:  /etc/passwd-
    owner: root
    group: root
    mode: u-x,go-wx
  when:
      - centos7cis_rule_6_1_6
  tags:
      - level1
      - patch
      - rule_6.1.6
      - scored

- name: "SCORED | 6.1.7 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
    dest: /etc/shadow-
    owner: root
    group: root
    mode: o-rwx,g-wx
  when:
      - centos7cis_rule_6_1_7
  tags:
      - level1
      - patch
      - rule_6.1.7
      - scored

- name: "SCORED | 6.1.8 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
    dest:  /etc/group-
    owner: root
    group: root
    mode: u-x,go-wx
  when:
      - centos7cis_rule_6_1_8
  tags:
      - level1
      - patch
      - rule_6.1.8
      - scored

- name: "SCORED | 6.1.9 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
    dest: /etc/gshadow-
    owner: root
    group: root
    mode: o-rwx,g-wx
  when:
      - centos7cis_rule_6_1_9
  tags:
      - level1
      - patch
      - rule_6.1.9
      - scored

- name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist"
  block:
    - name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist | get writable files"
      shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002"
      register: writable_files
    - name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist | assert none"
      assert:
        that:
          - writable_files.stdout == ""
        fail_msg: "6.1.10: Writable files exist."
  when:
    - centos7cis_rule_6_1_10
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.1.10
      - scored

- name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist"
  block:
    - name: "SCORED | 6.1.11 | PATCH | Ensure no world writable files exist | get unowned files"
      shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser"
      register: unowned_files

    - name: "SCORED | 6.1.11 | PATCH | Ensure no world writable files exist | assert none"
      assert:
        that:
          - unowned_files.stdout == ""
        fail_msg: "6.1.11: Unowned files exist"
  when:
    - centos7cis_rule_6_1_11
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.1.11
      - scored

- name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  block:
    - name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | get ungrouped files"
      shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup"
      register: ungrouped_files
      
    - name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist | assert none"
      assert:
        that:
          - ungrouped_files.stdout == ""
        fail_msg: "6.1.12: Ungrouped files exist"
  when:
    - centos7cis_rule_6_1_12
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.1.12
      - scored

- name: "NOTSCORED | 6.1.13 | PATCH | Audit SUID executables"
  block:
    - name: "NOTSCORED | 6.1.13 | PATCH | Audit SUID executables | get SUID files"
      shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -4000"
      register: suid_files
      
    - name: "NOTSCORED | 6.1.13 | PATCH | Audit SUID executables | assert none"
      assert:
        that:
          - suid_files.stdout == ""
        fail_msg: "6.1.13: SUID files exist"
  when:
      - centos7cis_rule_6_1_13
      - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.1.13
      - notscored

- name: "NOTSCORED | 6.1.14 | PATCH | Audit SGID executables"
  block:
    - name: "NOTSCORED | 6.1.14 | PATCH | Audit SGID executables | get SGID files"
      shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -2000"
      register: sgid_files
      
    - name: "NOTSCORED | 6.1.14 | PATCH | Audit SGID executables | assert none"
      assert:
        that:
          - sgid_files.stdout == ""
        fail_msg: "6.1.14: SGID files exist"
  when:
      - centos7cis_rule_6_1_14
      - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.1.14
      - notscored

- name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty"
  block:
    - name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty | get users without passwords"
      shell: "cat /etc/shadow | awk -F: '($2 == \"\" ) { print $1 \" does not have a password \"}'"
      register: no_passwords
      
    - name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty | assert none"
      assert:
        that:
          - no_passwords.stdout == ""
        fail_msg: "6.2.1: Users without passwords exist."
  when:
    - centos7cis_rule_6_2_1
    - fail_on_manual_remediation_actions
    - not centos7cis_skip_for_docker
  tags:
      - level1
      - patch
      - rule_6.2.1
      - scored

- name: "SCORED | 6.2.2 | PATCH | Ensure no legacy \"+\" entries exist in /etc/passwd"
  lineinfile:
    dest: /etc/passwd
    regex: '^\+:'
    state: absent
  check_mode: yes
  register: legacy_passwords
  failed_when: legacy_passwords.changed
  when:
      - centos7cis_rule_6_2_2
      - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.2
      - scored

- name: "SCORED | 6.2.3 | PATCH | Ensure no legacy \"+\" entries exist in /etc/shadow"
  lineinfile:
    dest: /etc/shadow
    regex: '^\+:'
    state: absent
  check_mode: yes
  register: shadow_legacy_passwords
  failed_when: shadow_legacy_passwords.changed
  when:
      - centos7cis_rule_6_2_3
      - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.3
      - scored

- name: "SCORED | 6.2.4 | PATCH | Ensure no legacy \"+\" entries exist in /etc/group"
  lineinfile:
    dest: /etc/group
    regex: '^\+:'
    state: absent
  check_mode: yes
  register: group_legacy_passwords
  failed_when: group_legacy_passwords.changed
  when:
      - centos7cis_rule_6_2_4
      - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.4
      - scored

- name: "SCORED | 6.2.5 | PATCH | Ensure root is the only UID 0 account"
  block:
    - name: "SCORED | 6.2.5 | PATCH | Ensure root is the only UID 0 account | get users with uid 0"
      shell: "cat /etc/passwd | awk -F: '($3 == 0) { print $1 }'"
      register: zero_uids
      
    - name: "SCORED | 6.2.5 | PATCH | Ensure root is the only UID 0 account | assert root"
      assert:
        that:
          - zero_uids.stdout == "root"
        fail_msg: "6.2.5: Multiple users with uid 0 exist."
  when:
    - centos7cis_rule_6_2_5
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.5
      - scored

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  block:
    - name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity | get path"
      command: echo $PATH
      register: path

    - name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity | Check for empty directorites or trailing `:`"
      assert:
        that:
          - "'::' not in path.stdout"
          - "':$' not in path.stdout"

    - name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity | get mod path"
      shell: "echo $PATH | sed -e 's/::/:/' -e 's/:$//' -e 's/:/ /g'"
      register: mod_path

    - name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity | Check that mod_path does not contain ."
      assert:
        that:
          - "'.' not in mod_path.stdout"

    - name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity | Check that path directories only have root permissions"
      file:
        path: item
        owner: root
        group: root
        state: directory
        mode: 644
      with_items: "{{ mod_path.stdout.split() }}"
  when:
    - centos7cis_rule_6_2_6
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.6
      - scored

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist
        SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive
        SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  block:
    - name: "SCORED | 6.2.7 | 6.2.8 | 6.2.9 | get users"
      shell: "cat /etc/passwd | egrep -v '^(root|halt|sync|shutdown)' | awk -F: '($7 !=\"/usr/sbin/nologin\" && $7 != \"/bin/false\") { print $1 \" \" $6}'"
      register: users

    - name: "SCORED | 6.2.7 | 6.2.8 | 6.2.9 | assert permissions are restrictive"
      assert:
        that:
          - user_dir_mode >= 750
        fail_msg: "6.2.8: Permissions on user dir not restrictive enough."

    - name: "SCORED | 6.2.7 | 6.2.8 | 6.2.9 | ensure users home directory exists and set permissions"
      file:
        path: "{{ item.split()[1] }}"
        owner: "{{ item.split()[0] }}"
        state: directory
        mode: user_dir_mode
      with_items: "{{ users.stdout.split(\"(?<!\\G\\S+)\\s\") }}"
  when:
    - centos7cis_rule_6_2_7
    - centos7cis_rule_6_2_8
    - centos7cis_rule_6_2_9
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.7
      - rule_6.2.8
      - rule_6.2.9
      - scored

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  block:
    - name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable | get users"
      shell: "cat /etc/passwd | egrep -v '^(root|halt|sync|shutdown)' | awk -F: '($7 !=\"/usr/sbin/nologin\" && $7 != \"/bin/false\") { print $6}'"
      register: user_dirs

    - name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable | get users' dotfiles"
      find:
        paths: "{{ user_dirs.stdout.split() }}"
        patterns: .[A-Za-z0-9]*
      register: dotfiles

    - name: SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable | check if group permissions"
      shell: "echo $(ls -ld {{ item.path }} | cut -f1 -d\" \") | cut -c6"
      register: fileperm
      failed_when: fileperm.stdout != "-"
      with_items: "{{ dotfiles.files }}"

    - name: SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable | check if world permissions"
      shell: "echo $(ls -ld {{ item.path }} | cut -f1 -d\" \") | cut -c9"
      register: fileperm
      failed_when: fileperm.stdout != "-"
      with_items: "{{ dotfiles.files }}"
  when:
    - centos7cis_rule_6_2_10
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.7
      - scored

- name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files"
  block:
    - name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files | get users"
      shell: "cat /etc/passwd | egrep -v '^(root|halt|sync|shutdown)' | awk -F: '($7 !=\"/usr/sbin/nologin\" && $7 != \"/bin/false\") { print $1 \" \" $6}'"
      register: users

    - name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files | remove .forward files"
      file:
        path: "{{ item.split()[1] }}/.forward"
        state: absent
      check_mode: true
      register: forward_exists
      failed_when: forward_exists.changed
      with_items: "{{ users.stdout.split(\"(?<!\\G\\S+)\\s\") }}"

  when:
    - centos7cis_rule_6_2_11
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.11
      - scored

- name: "SCORED | 6.2.12 | PATCH | Ensure no users have .netrc files
        SCORED | 6.2.13 | PATCH | Ensure users' .netrc Files are not group or world accessible"
  block:
    - name: "SCORED | 6.2.12 | 6.2.13 | get users"
      shell: "cat /etc/passwd | egrep -v '^(root|halt|sync|shutdown)' | awk -F: '($7 !=\"/usr/sbin/nologin\" && $7 != \"/bin/false\") { print $1 \" \" $6}'"
      register: users

    - name: "SCORED | 6.2.12 | 6.2.13 | check for .netrc files"
      file:
        path: "{{ item.split()[1] }}/.netrc"
        state: absent
      check_mode: true
      register: netrc_exists
      failed_when: netrc_exists.changed
      with_items: "{{ users.stdout.split(\"(?<!\\G\\S+)\\s\") }}"
      
  when:
    - centos7cis_rule_6_2_12 or centos7cis_rule_6_2_13
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.12
      - rule_6.2.13
      - scored

- name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files"
  block:
    - name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files | get users"
      shell: "cat /etc/passwd | egrep -v '^(root|halt|sync|shutdown)' | awk -F: '($7 !=\"/usr/sbin/nologin\" && $7 != \"/bin/false\") { print $1 \" \" $6}'"
      register: users

    - name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files | remove .rhosts files"
      file:
        path: "{{ item.split()[1] }}/.rhosts"
        state: absent
      check_mode: true
      register: rhosts_exists
      failed_when: rhosts_exists.changed
      with_items: "{{ users.stdout.split(\"(?<!\\G\\S+)\\s\") }}"

  when:
    - centos7cis_rule_6_2_14
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.14
      - scored

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  block:
    - name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group | get passwd groups"
      shell: "cut -s -d: -f4 /etc/passwd | sort -u"
      register: pw_groups

    - name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group | check /etc/groups"
      lineinfile:
        path: /etc/group
        regex: "^.*?:[^:]*:{{ item }}:"
        state: absent
      check_mode: true
      register: group_exists
      failed_when: group_exists.changed
      with_items: "{{ pw_groups.stdout }}"

  when:
    - centos7cis_rule_6_2_15
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.15
      - scored

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  block:
    - name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist | get number of uids"
      shell: "cat /etc/passwd | cut -f3 -d\":\" | sort -n | uniq -c"
      register: uids

    - name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist | assert instances of each uid"
      assert:
        that:
          - item.split()[0]|int <= 1
        fail_msg: "6.2.16: Duplicate instances of UID: {{ item.split()[1] }}"
      with_items: "{{ uids.stdout.split('\n') }}"

  when:
    - centos7cis_rule_6_2_16
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.16
      - scored

- name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
  block:
    - name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist | get number of gids"
      shell: "cat /etc/group | cut -f3 -d\":\" | sort -n | uniq -c"
      register: gids

    - name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist | assert instances of gids"
      assert:
        that:
          - item.split()[0]|int <= 1
        fail_msg: "6.2.17: Duplicate instances of GID: {{ item.split()[1] }}"
      with_items: "{{ gids.stdout.split('\n') }}"
  when:
    - centos7cis_rule_6_2_17
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.17
      - scored

- name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
  block:
    - name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist | get number of usernames"
      shell: "cat /etc/passwd | cut -f1 -d\":\" | sort -n | uniq -c"
      register: usernames

    - name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist | assert instances of usernames"
      assert:
        that:
          - item.split()[0]|int <= 1
        fail_msg: "6.2.18: Duplicate instances of username: {{ item.split()[1] }}"
      with_items: "{{ usernames.stdout.split('\n') }}"

  when:
    - centos7cis_rule_6_2_18
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.18
      - scored

- name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
  block:
    - name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist | get number of groupnames"
      shell: "cat /etc/group | cut -f1 -d\":\" | sort -n | uniq -c"
      register: usernames

    - name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist | assert instances of groupnames"
      assert:
        that:
          - item.split()[0]|int <= 1
        fail_msg: "6.2.19: Duplicate instances of group: {{ item.split()[1] }}"
      with_items: "{{ usernames.stdout.split('\n') }}"

  when:
    - centos7cis_rule_6_2_19
    - fail_on_manual_remediation_actions
  tags:
      - level1
      - patch
      - rule_6.2.19
      - scored
